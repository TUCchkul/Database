create table if not exists orders_1(
    order_id int,
    amount int,
    cust_id int
);
insert into customers_1 values(1,'John');
insert into customers_1 values(2,'David');

insert into customers_1 values(3,'Ronn');

insert into customers_1 values(4,'Betty');


insert into orders_1 values(1,100,10);

insert into orders_1 values(2,500,3);

insert into orders_1 values(3,300,6);

insert into orders_1 values(4,800,2);

insert into orders_1 values(5,350,1);
select * from customers_1;
select * from orders_1;
select 
o.*,c.*
from orders_1 o 
inner join customers_1 c on o.cust_id=c.id
where o.amount>400;
select
c.*,o.*
from orders_1 o  
inner join customers_1 c on o.cust_id=c.id and o.amount>400;
c.*,o.*
from orders_1 o  
inner join customers_1 c on o.cust_id=c.id and o.amount>400;

# Window Functions
create table shop_sales_data
(
sales_date date,
shop_id varchar(5),
sales_amount int
);

insert into shop_sales_data values('2022-02-14','S1',200);
insert into shop_sales_data values('2022-02-15','S1',300);
insert into shop_sales_data values('2022-02-14','S2',600);
insert into shop_sales_data values('2022-02-15','S3',500);
insert into shop_sales_data values('2022-02-18','S1',400);
insert into shop_sales_data values('2022-02-17','S2',250);
insert into shop_sales_data values('2022-02-20','S3',300);
select * from shop_sales_data;
select *,
        count(*) over(partition by shop_id) as total_sale_count_by_shops
from shop_sales_data;
#Using group by
select shop_id, count(*) as total_sale_count_by_shop from shop_sales_data group by shop_id;

select *,
        count(*) over(partition by shop_id order by sales_amount desc) as total_sale_count_by_shops from shop_sales_data;
select *,
        count(*) over(partition by shop_id order by sales_amount desc) as total_sales_count_by_shops from shop_sales_data;
#if we use only order by in over clause
select *,
        count(*) over(order by sales_amount desc) as total_sales_count_by_shops from shop_sales_data;
select *,
        sum(sales_amount) over(order by sales_amount desc) as total_sum_of_sales from shop_sales_data;
#if we use only partition by  
select *,
        sum(sales_amount) over(partition by shop_id) as total_sum_of_sales
from shop_sales_data;
# partition by and order by together
select *,
        sum(sales_amount) over(partition by shop_id order by sales_amount desc) as total_sum_of_sales from shop_sales_data;
create table if not exists amazon_sales_data(
    sales_data date,
    sales_amount int
);
insert into amazon_sales_data values('2022-08-21',500);
insert into amazon_sales_data values('2022-08-22',600);
insert into amazon_sales_data values('2022-08-19',300);

insert into amazon_sales_data values('2022-08-18',200);

insert into amazon_sales_data values('2022-08-25',800);
select * from amazon_sales_data;
#calculate the date wise rolling average of amazon sales
select *,
        avg(sales_amount) over(order by sales_data) as rolling_sum from amazon_sales_data;


